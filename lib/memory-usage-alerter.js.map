{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/memory-usage-alerter.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;;;;;EAQA,GAAA,GAA4B,OAAA,CAAQ,mBAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,sBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC;;EAIA,GAAA,GAA4B,GAAG,CAAC,GAAG,CAAC;;EACpC,EAAA,GAA4B,OAAA,CAAQ,eAAR;;EAC5B,QAAA,GAA4B,OAAA,CAAQ,eAAR,EAxB5B;;;;;;EA6BA,IAAC,CAAA,WAAD,GAAe,QAAA,CAAE,OAAF,CAAA;AACf,QAAA,QAAA;;;IAEE,QAAA,GACE;MAAA,KAAA,EAAU,oBAAV;MACA,OAAA,EAAU,OADV;MAEA,IAAA,EAAU;IAFV;WAGF,QAAQ,CAAC,MAAT,CAAgB,QAAhB;EAPa,EA7Bf;;;EAuCA,IAAC,CAAA,IAAD,GAAQ,QAAA,CAAA,CAAA;IACN,OAAO,CAAC,MAAR,CAAe,MAAf;WACA,KAAA,CAAM,EAAE,CAAC,QAAH,CAAY,oCAAZ,EAAkD;MAAE,QAAA,EAAU;IAAZ,CAAlD,CAAN;EAFM,EAvCR;;;EA4CA,IAAC,CAAA,IAAD,GAAQ,QAAA,CAAA,CAAA,EAAA;;;AACR,QAAA,IAAA,EAAA,UAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA;IAEE,MAAA,GAAc,EAAE,CAAC,QAAH,CAAY,MAAZ,EAAoB;MAAE,QAAA,EAAU;IAAZ,CAApB;IACd,CAAA,CAAE,KAAF,EACE,IADF,EAEE,IAFF,CAAA,GAEc,CAAE,MAAM,CAAC,KAAP,CAAa,iEAAb,CAAF,CAAkF,CAAC,MAFjG;IAGA,KAAA,GAAc,QAAA,CAAS,KAAT,EAAgB,EAAhB;IACd,IAAA,GAAc,QAAA,CAAS,IAAT,EAAgB,EAAhB;IACd,IAAA,GAAc,QAAA,CAAS,IAAT,EAAgB,EAAhB;IACd,KAAA,GAAc,CAAE,IAAA,GAAO,KAAT,CAAA,GAAmB;IACjC,UAAA,GAAc,CAAE,IAAA,GAAO,KAAT,CAAA,GAAmB;IACjC,OAAA,GAAc,CAAA,WAAA,CAAA,CAAc,KAAK,CAAC,OAAN,CAAc,CAAd,CAAd,CAAA,CAAA,EAXhB;;;;IAeE,IAAG,KAAA,GAAQ,EAAX;;MAEE,IAAA,CAAK,GAAA,CAAI,OAAJ,CAAL;MACA,IAAC,CAAA,WAAD,CAAa,OAAb,EAHF;KAAA,MAAA;MAKE,IAAA,CAAK,OAAL,EALF;;IAMA,GAAG,CAAC,KAAK,CAAC,KAAV,CAAgB,EAAhB,EAAoB,CAAA,CAAA,GAAA;aAAG,IAAC,CAAA,IAAD,CAAA;IAAH,CAApB;AACA,WAAO;EAvBD,EA5CR;;;EAsEA,IAAO,qBAAP;IACE,IAAC,CAAA,IAAD,CAAA,EADF;;;EAtEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\n# njs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nGUY                       = require '../../../apps/guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MEMORY-USAGE-ALERTER'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\nrvr                       = GUY.trm.reverse\nCP                        = require 'child_process'\nNOTIFIER                  = require 'node-notifier'\n# unless ( uid = process.argv[ 2 ] ? null )?\n#   throw new Error \"^memory-usage-alerter^ must give user as first argument\"\n\n#-----------------------------------------------------------------------------------------------------------\n@notify_warn = ( message ) ->\n  # path = PATH.relative process.cwd(), path\n  # process.setuid uid\n  settings =\n    title:    \"ðŸ”´ðŸ”´ðŸ”´ RAM  ðŸ”´ðŸ”´ðŸ”´\"\n    message:  message\n    wait:     false\n  NOTIFIER.notify settings\n\n#-----------------------------------------------------------------------------------------------------------\n@sync = ->\n  process.setuid 'root'\n  debug CP.execSync 'echo 3 >> /proc/sys/vm/drop_caches', { encoding: 'utf-8', }\n\n#-----------------------------------------------------------------------------------------------------------\n@demo = ->\n  ### thx to https://github.com/sebhildebrandt/systeminformation/blob/master/lib/memory.js#L79\n  (commit a2c76a198c33f8b1019bf4af0b047528804f5574 2022 07 14) ###\n  report      = CP.execSync 'free', { encoding: 'utf-8', }\n  { total\n    used\n    free  }   = ( report.match /^.+\\n\\S+\\s+(?<total>[0-9]+)\\s+(?<used>[0-9]+)\\s+(?<free>[0-9]+)/ ).groups\n  total       = parseInt total, 10\n  used        = parseInt used,  10\n  free        = parseInt free,  10\n  ratio       = ( used / total ) * 100\n  free_ratio  = ( free / total ) * 100\n  message     = \"RAM usage: #{ratio.toFixed 1}%\"\n  # debug free + used\n  # debug total - ( free + used )\n  # debug { total, used, ratio, free_ratio, }\n  if ratio > 75\n    # @sync()\n    warn rvr message\n    @notify_warn message\n  else\n    help message\n  GUY.async.after 10, => @demo()\n  return null\n\n############################################################################################################\nunless module.parent?\n  @demo()\n\n  ###\n  MemTotal:        3442252 kB\n  MemFree:          160728 kB\n  MemAvailable:     437192 kB\n\n  good:\n\n  MemTotal:        3442252 kB\n  MemFree:          542160 kB\n  MemAvailable:     672724 kB\n\n  critical:\n  MemTotal:        3442252 kB\n  MemFree:          123804 kB\n  MemAvailable:     220984 kB\n\n  MemTotal:        3442252 kB\n  MemFree:          311656 kB\n  MemAvailable:     564864 kB\n  Buffers:           55736 kB\n  Cached:           427812 kB\n\n                total        used        free      shared  buff/cache   available\n  Mem:        3442252     2541852      336820       63468      563580      599452\n  Swap:       2097148     1165312      931836\n\n\n  ###\n\n  # debug ( 160728 / 3442252 * 100 ).toFixed 0\n  # debug ( 437192 / 3442252 * 100 ).toFixed 0\n  # debug()\n  # debug ( 542160 / 3442252 * 100 ).toFixed 0\n  # debug ( 672724 / 3442252 * 100 ).toFixed 0\n  # debug()\n  # debug ( 123804 / 3442252 * 100 ).toFixed 0\n  # debug ( 220984 / 3442252 * 100 ).toFixed 0\n  # debug()\n  # debug ( 2541852 / 3442252 * 100 ).toFixed 0\n  # debug()\n  # debug 3442252 * 0.68\n"
  ]
}